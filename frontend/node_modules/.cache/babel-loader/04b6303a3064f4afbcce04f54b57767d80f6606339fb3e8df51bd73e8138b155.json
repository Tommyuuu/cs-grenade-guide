{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { io } from \"socket.io-client\";\nexport default {\n  props: {\n    mapName: String,\n    // 地圖名稱（聊天室房間）\n    username: String // 使用者名稱\n  },\n  data() {\n    return {\n      socket: null,\n      // Socket.IO 客戶端實例\n      newMessage: \"\",\n      // 當前輸入的訊息文字\n      messages: [],\n      // 所有聊天室訊息資料\n      justSent: false //剛傳送ㄉ\n    };\n  },\n  mounted() {\n    // 建立與後端的 WebSocket 連線\n    this.socket = io(\"http://localhost:5000\");\n    // 加入以 mapName 命名的聊天室房間\n    this.socket.emit(\"join\", {\n      map: this.mapName\n    });\n\n    // 接收從後端來的訊息並顯示（不再自動捲到底）\n    this.socket.on(\"chat\", msg => {\n      this.messages.push(msg);\n      if (this.justSent) {\n        this.$nextTick(() => {\n          this.scrollToBottom();\n        });\n      }\n      this.justSent = false;\n    });\n    setTimeout(() => this.scrollToBottom(), 500);\n    setTimeout(() => this.scrollToBottom(), 1500);\n  },\n  methods: {\n    scrollToBottom() {\n      this.$nextTick(() => {\n        setTimeout(() => {\n          requestAnimationFrame(() => {\n            const container = this.$refs.chatContainer;\n            if (container) {\n              container.scrollTop = container.scrollHeight;\n            }\n          });\n        }, 300);\n      });\n    },\n    // 發送訊息至後端\n    sendMessage() {\n      if (!this.newMessage.trim()) return; // 空白訊息不送出\n      this.socket.emit(\"chat\", {\n        map: this.mapName,\n        username: this.username,\n        message: this.newMessage\n      });\n      this.newMessage = \"\"; // 清空輸入欄\n      this.justSent = true;\n    },\n    // 時間格式化顯示\n    formatTime(timestamp) {\n      const d = new Date(timestamp);\n      return d.toLocaleTimeString();\n    }\n  }\n};","map":{"version":3,"names":["io","props","mapName","String","username","data","socket","newMessage","messages","justSent","mounted","emit","map","on","msg","push","$nextTick","scrollToBottom","setTimeout","methods","requestAnimationFrame","container","$refs","chatContainer","scrollTop","scrollHeight","sendMessage","trim","message","formatTime","timestamp","d","Date","toLocaleTimeString"],"sources":["C:\\Users\\tangchi\\OneDrive\\桌面\\Code\\sidep\\frontend\\src\\components\\ChatRoom.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-room-sidebar bg-dark text-white d-flex flex-column\">\r\n    <div class=\"chat-header d-flex justify-content-between align-items-center p-2 border-bottom\">\r\n      <h5 class=\"mb-0\">{{ mapName }} 聊天室</h5>\r\n      <button class=\"btn btn-outline-light btn-sm\" @click=\"$emit('close')\">隱藏聊天室</button>\r\n    </div>\r\n\r\n    <!-- 聊天訊息區塊，可滾動，不會撐大畫面 -->\r\n     \r\n    <div class=\"flex-grow-1 overflow-auto p-2 border-bottom chat-messages\" ref=\"chatContainer\">\r\n        <!-- 每一則訊息 -->\r\n        <div v-for=\"(msg, index) in messages\" :key=\"index\" class=\"d-flex align-items-start mb-2\" :ref=\"index === messages.length - 1 ? 'lastMessage' : null\">\r\n            <!-- 左側頭像：使用者名稱首字母 -->\r\n            <div class=\"avatar bg-success text-white rounded-circle d-flex justify-content-center align-items-center me-2\" style=\"width: 32px; height: 32px;\">\r\n                {{ msg.username.charAt(0).toUpperCase() }}\r\n            </div>\r\n            <!-- 訊息本體 -->\r\n            <div class=\"flex-grow-1\">\r\n            <!-- 使用者名稱與時間 -->\r\n                <div class=\"d-flex justify-content-between small text-muted\">\r\n                    <strong class=\"text-light\">{{ msg.username }}</strong>\r\n                    <span style=\"color: #cccccc\">{{ formatTime(msg.timestamp) }}</span>\r\n                </div>\r\n                <!-- 訊息內容 -->\r\n                <div class=\"text-white\">{{ msg.message }}</div>\r\n            </div>\r\n        </div>\r\n      \r\n    </div>\r\n\r\n    <!-- 下方輸入區域（包含輸入框與傳送按鈕） -->\r\n      <div class=\"p-2 border-top\">\r\n        <div class=\"input-group\">\r\n          <input\r\n            v-model=\"newMessage\"\r\n            @keyup.enter=\"sendMessage\"\r\n            placeholder=\"輸入訊息...\"\r\n            class=\"form-control\"\r\n          />\r\n          <button class=\"btn btn-primary\" @click=\"sendMessage\">傳送</button>\r\n        </div>\r\n    </div> \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { io } from \"socket.io-client\";\r\n\r\nexport default {\r\n  props: {\r\n    mapName: String, // 地圖名稱（聊天室房間）\r\n    username: String // 使用者名稱\r\n  },\r\n  data() {\r\n    return {\r\n      socket: null,         // Socket.IO 客戶端實例\r\n      newMessage: \"\",      // 當前輸入的訊息文字\r\n      messages: []  ,        // 所有聊天室訊息資料\r\n      justSent: false,        //剛傳送ㄉ\r\n    };\r\n  },\r\n  mounted() {\r\n    // 建立與後端的 WebSocket 連線\r\n    this.socket = io(\"http://localhost:5000\");\r\n    // 加入以 mapName 命名的聊天室房間\r\n    this.socket.emit(\"join\", { map: this.mapName });\r\n\r\n    // 接收從後端來的訊息並顯示（不再自動捲到底）\r\n    this.socket.on(\"chat\", (msg) => {\r\n      this.messages.push(msg);\r\n      if (this.justSent){\r\n        this.$nextTick(() => {\r\n            this.scrollToBottom();\r\n        });\r\n      }\r\n       this.justSent = false;\r\n    });\r\n    \r\n    setTimeout(() => this.scrollToBottom(), 500);\r\n    setTimeout(() => this.scrollToBottom(), 1500);\r\n  },\r\n  methods: {\r\n    scrollToBottom() {\r\n        this.$nextTick(() => {\r\n            setTimeout(() => {\r\n                requestAnimationFrame(() => {\r\n                    const container = this.$refs.chatContainer;\r\n                    if (container) {\r\n                        container.scrollTop = container.scrollHeight;\r\n                    }\r\n                });\r\n            },300);\r\n        });\r\n    },\r\n\r\n    // 發送訊息至後端\r\n    sendMessage() {\r\n      if (!this.newMessage.trim()) return; // 空白訊息不送出\r\n      this.socket.emit(\"chat\", {\r\n        map: this.mapName,\r\n        username: this.username,\r\n        message: this.newMessage\r\n      });\r\n      this.newMessage = \"\"; // 清空輸入欄\r\n      this.justSent=true;\r\n    },\r\n    \r\n    // 時間格式化顯示\r\n    formatTime(timestamp) {\r\n      const d = new Date(timestamp);\r\n      return d.toLocaleTimeString();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chat-room-sidebar {\r\n  position: fixed;\r\n  top: 56px; /* 假設 navbar 高度是 56px */\r\n  right: 0;\r\n  width: 350px;\r\n  height: calc(100vh - 56px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  z-index: 1050;\r\n  box-shadow: -2px 0 10px rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.chat-messages {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n}\r\n</style>"],"mappings":";AA8CA,SAASA,EAAC,QAAS,kBAAkB;AAErC,eAAe;EACbC,KAAK,EAAE;IACLC,OAAO,EAAEC,MAAM;IAAE;IACjBC,QAAQ,EAAED,MAAK,CAAE;EACnB,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,IAAI;MAAU;MACtBC,UAAU,EAAE,EAAE;MAAO;MACrBC,QAAQ,EAAE,EAAC;MAAY;MACvBC,QAAQ,EAAE,KAAK,CAAS;IAC1B,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACJ,MAAK,GAAIN,EAAE,CAAC,uBAAuB,CAAC;IACzC;IACA,IAAI,CAACM,MAAM,CAACK,IAAI,CAAC,MAAM,EAAE;MAAEC,GAAG,EAAE,IAAI,CAACV;IAAQ,CAAC,CAAC;;IAE/C;IACA,IAAI,CAACI,MAAM,CAACO,EAAE,CAAC,MAAM,EAAGC,GAAG,IAAK;MAC9B,IAAI,CAACN,QAAQ,CAACO,IAAI,CAACD,GAAG,CAAC;MACvB,IAAI,IAAI,CAACL,QAAQ,EAAC;QAChB,IAAI,CAACO,SAAS,CAAC,MAAM;UACjB,IAAI,CAACC,cAAc,CAAC,CAAC;QACzB,CAAC,CAAC;MACJ;MACC,IAAI,CAACR,QAAO,GAAI,KAAK;IACxB,CAAC,CAAC;IAEFS,UAAU,CAAC,MAAM,IAAI,CAACD,cAAc,CAAC,CAAC,EAAE,GAAG,CAAC;IAC5CC,UAAU,CAAC,MAAM,IAAI,CAACD,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAC/C,CAAC;EACDE,OAAO,EAAE;IACPF,cAAcA,CAAA,EAAG;MACb,IAAI,CAACD,SAAS,CAAC,MAAM;QACjBE,UAAU,CAAC,MAAM;UACbE,qBAAqB,CAAC,MAAM;YACxB,MAAMC,SAAQ,GAAI,IAAI,CAACC,KAAK,CAACC,aAAa;YAC1C,IAAIF,SAAS,EAAE;cACXA,SAAS,CAACG,SAAQ,GAAIH,SAAS,CAACI,YAAY;YAChD;UACJ,CAAC,CAAC;QACN,CAAC,EAAC,GAAG,CAAC;MACV,CAAC,CAAC;IACN,CAAC;IAED;IACAC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAAC,IAAI,CAACnB,UAAU,CAACoB,IAAI,CAAC,CAAC,EAAE,OAAM,CAAE;MACrC,IAAI,CAACrB,MAAM,CAACK,IAAI,CAAC,MAAM,EAAE;QACvBC,GAAG,EAAE,IAAI,CAACV,OAAO;QACjBE,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBwB,OAAO,EAAE,IAAI,CAACrB;MAChB,CAAC,CAAC;MACF,IAAI,CAACA,UAAS,GAAI,EAAE,EAAE;MACtB,IAAI,CAACE,QAAQ,GAAC,IAAI;IACpB,CAAC;IAED;IACAoB,UAAUA,CAACC,SAAS,EAAE;MACpB,MAAMC,CAAA,GAAI,IAAIC,IAAI,CAACF,SAAS,CAAC;MAC7B,OAAOC,CAAC,CAACE,kBAAkB,CAAC,CAAC;IAC/B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}