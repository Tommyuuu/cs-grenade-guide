{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-room-sidebar bg-dark text-white d-flex flex-column\"\n};\nconst _hoisted_2 = {\n  class: \"chat-header d-flex justify-content-between align-items-center p-2 border-bottom\"\n};\nconst _hoisted_3 = {\n  class: \"mb-0\"\n};\nconst _hoisted_4 = {\n  class: \"flex-grow-1 overflow-auto p-2 border-bottom chat-messages\",\n  ref: \"chatContainer\"\n};\nconst _hoisted_5 = {\n  class: \"avatar bg-success text-white rounded-circle d-flex justify-content-center align-items-center me-2\",\n  style: {\n    \"width\": \"32px\",\n    \"height\": \"32px\"\n  }\n};\nconst _hoisted_6 = {\n  class: \"flex-grow-1\"\n};\nconst _hoisted_7 = {\n  class: \"d-flex justify-content-between small text-muted\"\n};\nconst _hoisted_8 = {\n  class: \"text-light\"\n};\nconst _hoisted_9 = {\n  style: {\n    \"color\": \"#cccccc\"\n  }\n};\nconst _hoisted_10 = {\n  class: \"text-white\"\n};\nconst _hoisted_11 = {\n  class: \"p-2 border-top\"\n};\nconst _hoisted_12 = {\n  class: \"input-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h5\", _hoisted_3, _toDisplayString($props.mapName) + \" 聊天室\", 1), _createElementVNode(\"button\", {\n    class: \"btn btn-outline-light btn-sm\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('close'))\n  }, \"隱藏聊天室\")]), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, (msg, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"d-flex align-items-start mb-2\",\n      ref_for: true,\n      ref: index === $data.messages.length - 1 ? 'lastMessage' : null\n    }, [_createElementVNode(\"div\", _hoisted_5, _toDisplayString(msg.username.charAt(0).toUpperCase()), 1), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"strong\", _hoisted_8, _toDisplayString(msg.username), 1), _createElementVNode(\"span\", _hoisted_9, _toDisplayString($options.formatTime(msg.timestamp)), 1)]), _createElementVNode(\"div\", _hoisted_10, _toDisplayString(msg.message), 1)])]);\n  }), 128))], 512), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newMessage = $event),\n    onKeyup: _cache[2] || (_cache[2] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"])),\n    placeholder: \"輸入訊息...\",\n    class: \"form-control\"\n  }, null, 544), [[_vModelText, $data.newMessage]]), _createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.sendMessage && $options.sendMessage(...args))\n  }, \"傳送\")])])]);\n}","map":{"version":3,"names":["class","ref","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","$props","mapName","onClick","_cache","$event","_ctx","$emit","_hoisted_4","_Fragment","_renderList","$data","messages","msg","index","key","length","_hoisted_5","username","charAt","toUpperCase","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","$options","formatTime","timestamp","_hoisted_10","message","_hoisted_11","_hoisted_12","newMessage","onKeyup","_withKeys","args","sendMessage","placeholder"],"sources":["C:\\Users\\tangchi\\OneDrive\\桌面\\Code\\sidep\\frontend\\src\\components\\ChatRoom.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-room-sidebar bg-dark text-white d-flex flex-column\">\r\n    <div class=\"chat-header d-flex justify-content-between align-items-center p-2 border-bottom\">\r\n      <h5 class=\"mb-0\">{{ mapName }} 聊天室</h5>\r\n      <button class=\"btn btn-outline-light btn-sm\" @click=\"$emit('close')\">隱藏聊天室</button>\r\n    </div>\r\n\r\n    <!-- 聊天訊息區塊，可滾動，不會撐大畫面 -->\r\n     \r\n    <div class=\"flex-grow-1 overflow-auto p-2 border-bottom chat-messages\" ref=\"chatContainer\">\r\n        <!-- 每一則訊息 -->\r\n        <div v-for=\"(msg, index) in messages\" :key=\"index\" class=\"d-flex align-items-start mb-2\" :ref=\"index === messages.length - 1 ? 'lastMessage' : null\">\r\n            <!-- 左側頭像：使用者名稱首字母 -->\r\n            <div class=\"avatar bg-success text-white rounded-circle d-flex justify-content-center align-items-center me-2\" style=\"width: 32px; height: 32px;\">\r\n                {{ msg.username.charAt(0).toUpperCase() }}\r\n            </div>\r\n            <!-- 訊息本體 -->\r\n            <div class=\"flex-grow-1\">\r\n            <!-- 使用者名稱與時間 -->\r\n                <div class=\"d-flex justify-content-between small text-muted\">\r\n                    <strong class=\"text-light\">{{ msg.username }}</strong>\r\n                    <span style=\"color: #cccccc\">{{ formatTime(msg.timestamp) }}</span>\r\n                </div>\r\n                <!-- 訊息內容 -->\r\n                <div class=\"text-white\">{{ msg.message }}</div>\r\n            </div>\r\n        </div>\r\n      \r\n    </div>\r\n\r\n    <!-- 下方輸入區域（包含輸入框與傳送按鈕） -->\r\n      <div class=\"p-2 border-top\">\r\n        <div class=\"input-group\">\r\n          <input\r\n            v-model=\"newMessage\"\r\n            @keyup.enter=\"sendMessage\"\r\n            placeholder=\"輸入訊息...\"\r\n            class=\"form-control\"\r\n          />\r\n          <button class=\"btn btn-primary\" @click=\"sendMessage\">傳送</button>\r\n        </div>\r\n    </div> \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { io } from \"socket.io-client\";\r\n\r\nexport default {\r\n  props: {\r\n    mapName: String, // 地圖名稱（聊天室房間）\r\n    username: String // 使用者名稱\r\n  },\r\n  data() {\r\n    return {\r\n      socket: null,         // Socket.IO 客戶端實例\r\n      newMessage: \"\",      // 當前輸入的訊息文字\r\n      messages: []  ,        // 所有聊天室訊息資料\r\n      justSent: false,        //剛傳送ㄉ\r\n    };\r\n  },\r\n  mounted() {\r\n    // 建立與後端的 WebSocket 連線\r\n    this.socket = io();\r\n    // 加入以 mapName 命名的聊天室房間\r\n    this.socket.emit(\"join\", { map: this.mapName });\r\n\r\n    // 接收從後端來的訊息並顯示（不再自動捲到底）\r\n    this.socket.on(\"chat\", (msg) => {\r\n      this.messages.push(msg);\r\n      if (this.justSent){\r\n        this.$nextTick(() => {\r\n            this.scrollToBottom();\r\n        });\r\n      }\r\n       this.justSent = false;\r\n    });\r\n    \r\n    setTimeout(() => this.scrollToBottom(), 500);\r\n    setTimeout(() => this.scrollToBottom(), 1500);\r\n  },\r\n  methods: {\r\n    scrollToBottom() {\r\n        this.$nextTick(() => {\r\n            setTimeout(() => {\r\n                requestAnimationFrame(() => {\r\n                    const container = this.$refs.chatContainer;\r\n                    if (container) {\r\n                        container.scrollTop = container.scrollHeight;\r\n                    }\r\n                });\r\n            },300);\r\n        });\r\n    },\r\n\r\n    // 發送訊息至後端\r\n    sendMessage() {\r\n      if (!this.newMessage.trim()) return; // 空白訊息不送出\r\n      this.socket.emit(\"chat\", {\r\n        map: this.mapName,\r\n        username: this.username,\r\n        message: this.newMessage\r\n      });\r\n      this.newMessage = \"\"; // 清空輸入欄\r\n      this.justSent=true;\r\n    },\r\n    \r\n    // 時間格式化顯示\r\n    formatTime(timestamp) {\r\n      const d = new Date(timestamp);\r\n      return d.toLocaleTimeString();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chat-room-sidebar {\r\n  position: fixed;\r\n  top: 56px; /* 假設 navbar 高度是 56px */\r\n  right: 0;\r\n  width: 350px;\r\n  height: calc(100vh - 56px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  z-index: 1050;\r\n  box-shadow: -2px 0 10px rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.chat-messages {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAyD;;EAC7DA,KAAK,EAAC;AAAiF;;EACtFA,KAAK,EAAC;AAAM;;EAMbA,KAAK,EAAC,2DAA2D;EAACC,GAAG,EAAC;;;EAI9DD,KAAK,EAAC,mGAAmG;EAACE,KAAkC,EAAlC;IAAA;IAAA;EAAA;;;EAI1GF,KAAK,EAAC;AAAa;;EAEfA,KAAK,EAAC;AAAiD;;EAChDA,KAAK,EAAC;AAAY;;EACpBE,KAAsB,EAAtB;IAAA;EAAA;AAAsB;;EAG3BF,KAAK,EAAC;AAAY;;EAO5BA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAa;;uBA/B9BG,mBAAA,CAyCM,OAzCNC,UAyCM,GAxCJC,mBAAA,CAGM,OAHNC,UAGM,GAFJD,mBAAA,CAAuC,MAAvCE,UAAuC,EAAAC,gBAAA,CAAnBC,MAAA,CAAAC,OAAO,IAAG,MAAI,MAClCL,mBAAA,CAAmF;IAA3EL,KAAK,EAAC,8BAA8B;IAAEW,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;KAAW,OAAK,E,GAK5EV,mBAAA,CAmBM,OAnBNW,UAmBM,I,kBAjBFb,mBAAA,CAeMc,SAAA,QAAAC,WAAA,CAfsBC,KAAA,CAAAC,QAAQ,GAAvBC,GAAG,EAAEC,KAAK;yBAAvBnB,mBAAA,CAeM;MAfiCoB,GAAG,EAAED,KAAK;MAAEtB,KAAK,EAAC,+BAA+B;;MAAEC,GAAG,EAAEqB,KAAK,KAAKH,KAAA,CAAAC,QAAQ,CAACI,MAAM;QAEpHnB,mBAAA,CAEM,OAFNoB,UAEM,EAAAjB,gBAAA,CADCa,GAAG,CAACK,QAAQ,CAACC,MAAM,IAAIC,WAAW,SAGzCvB,mBAAA,CAQM,OARNwB,UAQM,GANFxB,mBAAA,CAGM,OAHNyB,UAGM,GAFFzB,mBAAA,CAAsD,UAAtD0B,UAAsD,EAAAvB,gBAAA,CAAxBa,GAAG,CAACK,QAAQ,OAC1CrB,mBAAA,CAAmE,QAAnE2B,UAAmE,EAAAxB,gBAAA,CAAnCyB,QAAA,CAAAC,UAAU,CAACb,GAAG,CAACc,SAAS,O,GAG5D9B,mBAAA,CAA+C,OAA/C+B,WAA+C,EAAA5B,gBAAA,CAApBa,GAAG,CAACgB,OAAO,M;oBAOhDhC,mBAAA,CAUI,OAVJiC,WAUI,GATFjC,mBAAA,CAQM,OARNkC,WAQM,G,gBAPJlC,mBAAA,CAKE;+DAJSc,KAAA,CAAAqB,UAAU,GAAA3B,MAAA;IAClB4B,OAAK,EAAA7B,MAAA,QAAAA,MAAA,MAAA8B,SAAA,KAAAC,IAAA,KAAQV,QAAA,CAAAW,WAAA,IAAAX,QAAA,CAAAW,WAAA,IAAAD,IAAA,CAAW;IACzBE,WAAW,EAAC,SAAS;IACrB7C,KAAK,EAAC;gCAHGmB,KAAA,CAAAqB,UAAU,E,GAKrBnC,mBAAA,CAAgE;IAAxDL,KAAK,EAAC,iBAAiB;IAAEW,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAA+B,IAAA,KAAEV,QAAA,CAAAW,WAAA,IAAAX,QAAA,CAAAW,WAAA,IAAAD,IAAA,CAAW;KAAE,IAAE,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}